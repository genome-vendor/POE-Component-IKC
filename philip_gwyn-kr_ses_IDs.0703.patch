diff -rub POE-0.0703/POE/Kernel.pm POE-0.0703-PG/POE/Kernel.pm
--- POE-0.0703/POE/Kernel.pm	Fri Jul 30 09:19:19 1999
+++ POE-0.0703-PG/POE/Kernel.pm	Tue Sep 14 21:40:03 1999
@@ -111,6 +111,8 @@
 sub KR_SIGNALS        () { 4 }
 sub KR_ALIASES        () { 5 }
 sub KR_ACTIVE_SESSION () { 6 }
+sub KR_ID             () { 7 }          # -PG
+sub KR_IDs            () { 8 }          # -PG
                                         # handle structure
 sub HND_HANDLE   () { 0 }
 sub HND_REFCOUNT () { 1 }
@@ -258,6 +260,8 @@
     $self->[KR_STATES  ] = [ ];
     $self->[KR_SIGNALS ] = { };
     $self->[KR_ALIASES ] = { };
+    $self->[KR_ID      ] = '';          # -PG
+    $self->[KR_IDs     ] = { };         # -PG
                                         # initialize the vectors *as* vectors
     vec($self->[KR_VECTORS]->[VEC_RD], 0, 1) = 0;
     vec($self->[KR_VECTORS]->[VEC_WR], 0, 1) = 0;
@@ -759,6 +763,7 @@
     die "session $session already exists\a"
       if (exists $self->[KR_SESSIONS]->{$session});
   }
+  $session->ID($self->ID_alloc($session));    # -PG
 
   $self->_dispatch_state($session, $kr_active_session, EN_START, \@args);
   $self->_enqueue_state($session, $kr_active_session, EN_GC, time(), []);
@@ -810,6 +815,7 @@
 
     unless ($ss->[SS_REFCOUNT]) {
       $self->session_free($session);
+      $self->ID_free($ss->[SS_SESSION]);
     }
   }
 }
@@ -1241,6 +1247,11 @@
   if (exists $self->[KR_SESSIONS]->{$name}) {
     return $self->[KR_SESSIONS]->{$name}->[SS_SESSION];
   }
+ 
+                                        # resolve against session IDs
+  if (my $s=$self->ID_lookup($name)) { 
+    return $s if $s->isa('POE::Session');
+  }
                                         # it doesn't resolve to anything?
   $! = ESRCH;
   return undef;
@@ -1262,6 +1273,63 @@
                                         # no such session
   $! = ESRCH;
   return 0;
+}
+
+#==============================================================================
+# Kernel and Session IDs -PG
+#==============================================================================
+
+sub _ID ()
+{
+    # Attempt to get hostname
+    local $SIG{__DIE__};
+    my $host='';
+    eval {                      # POSIX::uname is fast
+        require POSIX;
+        $host=(POSIX::uname)[1];
+    } 
+#    || eval {                   # Sys::Hostname is potentialy very slow
+#        require Sys::Hostname;
+#        $host=Sys::Hostname::hostname;
+#    }
+    ;
+    $host.='-' if $host;
+    # this is guarantied to be unique localy until $$ is able
+    # to wrap around w/in one second
+    return $host.unpack 'H*', pack'N*', time, $$;
+}
+
+sub ID
+{
+    my ($self) = @_;
+    $self->[KR_ID] ||= _ID;
+    return $self->[KR_ID];
+}
+
+{
+    my $session_id=1;
+    sub ID_alloc
+    {
+        my($self, $what)=@_;
+        my $id=$session_id++;
+        # we don't use an array, because it will be sparse 
+        # (and therefore waste memory)
+        $self->[KR_IDs]->{$id}=$what;        # Not needed (for now)
+        return $id;
+    }
+}
+
+sub ID_lookup
+{
+    my($self, $id)=@_;
+    $id=$id->ID if ref $id;
+    return $self->[KR_IDs]->{$id}
+}
+sub ID_free
+{
+    my($self, $id)=@_;
+    $id=$id->ID if ref $id;    
+    delete $self->[KR_IDs]->{$id}
 }
 
 ###############################################################################
diff -rub POE-0.0703/POE/Session.pm POE-0.0703-PG/POE/Session.pm
--- POE-0.0703/POE/Session.pm	Fri Aug 20 13:41:43 1999
+++ POE-0.0703-PG/POE/Session.pm	Tue Sep 14 21:45:21 1999
@@ -28,6 +28,7 @@
 sub ARG7    () { 13 }
 sub ARG8    () { 14 }
 sub ARG9    () { 15 }
+sub _ID     () { 16 } # -PG
 
 sub SE_NAMESPACE () { 0 }
 sub SE_OPTIONS   () { 1 }
@@ -329,6 +330,18 @@
   else {
     return \%return_values;
   }
+}
+
+
+#------------------------------------------------------------------------------
+sub ID
+{
+    my($self, $id)=@_;
+    if(2==@_) {
+        $self->[_ID] = $id;
+        return
+    }
+    return $self->[_ID];
 }
 
 ###############################################################################
